name: Sync to Azure DevOps

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  sync:
    permissions:
      contents: write  # for Git to git push
    runs-on: ubuntu-latest

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
      with:
        egress-policy: audit

    - name: Checkout GitHub repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0 # This is necessary

    - name: Set up Git configuration
      run: |
        git config --global user.name "HotCakeX"
        git config --global user.email "spynetgirl@outlook.com"

    - name: Sync main branch to Azure DevOps
      env:
        AZURE_REPO_URL: https://SpyNetGirl@dev.azure.com/SpyNetGirl/Harden-Windows-Security/_git/Harden-Windows-Security
        AZURE_DEVOPS_PAT: ${{ secrets.AZUREDEVOPSPATFORSYNC }}

      run: |
        # Adding Azure DevOps repo as a remote
        git remote add azure "$AZURE_REPO_URL"
        git remote -v  # Verifying the remote was added

        # Authenticating with Azure DevOps using PAT
        git config --global credential.helper store
        echo "https://SpyNetGirl:${AZURE_DEVOPS_PAT}@dev.azure.com" > ~/.git-credentials

        # Pushing only the main branch to Azure DevOps
        # The 2 repositories will be completely identical and any discrepancy is taken care of by force push
        git push azure main --force
